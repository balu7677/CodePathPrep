public class Solution {
    public int firstMissingPositive(ArrayList<Integer> A) {
        if (A == null || A.size() == 0)
            return 0;
       int[] arr = new int[A.size()];
       for(int p=0;p<A.size();p++){
           arr[p]=A.get(p);
       }
       int shift = segregate (arr, A.size());
       int arr2[] = new int[A.size()-shift];
       int j=0;
       for(int i=shift;i<A.size();i++)
           {
               arr2[j] = arr[i];
               j++;
           }    
    
       return findMissingPositive(arr2, j);
        
    } 
    
    
    public  int segregate (int arr[], int size)
    {
        int j = 0, i;
        for(i = 0; i < size; i++)
        {
           if (arr[i] <= 0)  
           {
               int temp;
               temp = arr[i];
               arr[i] = arr[j];
               arr[j] = temp;
               j++;  
           }
        }
      
        return j;
    }
      
    
     public int findMissingPositive(int arr[], int size)
    {
      int i;
      
      for(i = 0; i < size; i++)
      {
        if(Math.abs(arr[i]) - 1 < size && arr[Math.abs(arr[i]) - 1] > 0)
          arr[Math.abs(arr[i]) - 1] = -arr[Math.abs(arr[i]) - 1];
      }
      
      for(i = 0; i < size; i++)
        if (arr[i] > 0)
          return i+1;  
      
      return size+1;
    }
      
}
